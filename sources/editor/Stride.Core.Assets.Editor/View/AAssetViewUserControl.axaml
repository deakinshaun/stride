<UserControl x:Class="Stride.Core.Assets.Editor.View.AAssetViewUserControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModel="clr-namespace:Stride.Core.Assets.Editor.ViewModel"
             xmlns:sd="http://schemas.stride3d.net/xaml/presentation"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:view="clr-namespace:Stride.Core.Assets.Editor.View"
             xmlns:controls="clr-namespace:Stride.Core.Assets.Editor.View.Controls;assembly=Stride.Core.Assets.Editor"
             xmlns:behaviors="clr-namespace:Stride.Core.Assets.Editor.View.Behaviors"
             xmlns:cvt="clr-namespace:Stride.Core.Assets.Editor.View.ValueConverters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:status="clr-namespace:Stride.Core.Assets.Editor.Components.Status.Views"
             xmlns:strings="clr-namespace:Stride.Core.Assets.Editor.Resources.Strings"
             xmlns:templateViews="clr-namespace:Stride.Core.Assets.Editor.Components.TemplateDescriptions.Views"
             xmlns:services="clr-namespace:Stride.Core.Assets.Editor.Services"
             mc:Ignorable="d" Focusable="True"
             d:DesignHeight="300" d:DesignWidth="300" x:Name="AssetView" BorderThickness="1" BorderBrush="{DynamicResource MenuBorderBrush}">

	<UserControl.Resources>
		<ControlTheme x:Key="{x:Type Image}" TargetType="Image" >
			<Setter Property="Source" Value="{Binding Source={StaticResource ImageNewAsset}, Path=Source}" />
			<!--<ControlTheme.Triggers>
                        -->
			<!--<DataTrigger Binding="{Binding IsAlternative, ElementName=FilterSearchComboBox}" Value="True">
                          <Setter Property="Source" Value="{StaticResource ImageRefresh}" />
                        </DataTrigger>-->
			<!--
                      </ControlTheme.Triggers>-->
		</ControlTheme>

	</UserControl.Resources>
  <DockPanel x:Name="RootContainer"> 
	  
	  <DockPanel.Resources>
		  
		  <ResourceDictionary>
			  <!-- MERGED DICTIONARIES: IMAGE DICTIONARY, PROPERTY GRID VIEWS -->
			  <ResourceDictionary.MergedDictionaries>
				  <ResourceInclude Source="ACommonResources.axaml"/>
			  </ResourceDictionary.MergedDictionaries>

			  <ControlTheme x:Key="{x:Type controls:AEditableContentListBoxItem}" TargetType="{x:Type controls:AEditableContentListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>
			  <ControlTheme x:Key="{x:Type controls:AEditableContentListBox}" TargetType="{x:Type controls:AEditableContentListBox}" BasedOn="{StaticResource {x:Type ListBox}}" />

			  <!--<DataTemplate.Resources>-->
				  
					  <DataTemplate x:Key="ItemTemplate" DataType="{x:Type viewModel:ISessionObjectViewModel}">
						  <HeaderedContentControl Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}">
							  <!--<HeaderedContentControl SnapsToDevicePixels="True" ToolTipService.InitialShowDelay="1">-->
								  <!--<i:Interaction.Behaviors>
								  <sd:OnEventCommandBehavior EventName="MouseDoubleClick" Command="{Binding AssetDoubleClick, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
															   CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType=controls:EditableContentListBox}}"/>
							  </i:Interaction.Behaviors>-->
							  <HeaderedContentControl.Header>
								  <Grid Background="Transparent">
									  <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Margin="0,3,0,0">
										  <Image Source="{Binding ThumbnailData.Presenter, Mode=OneWay}" 
												 Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
												 Height="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}" Stretch="None"/>
									  </Border>
									  <ProgressBar Width="32" Height="8"
												 IsIndeterminate="{Binding ThumbnailData, Mode=OneWay, Converter={sd:AChained {sd:AObjectToBool}, {sd:AInvertBool}}}"
										         IsVisible="{Binding ThumbnailData, Mode=OneWay, Converter={sd:AChained {sd:AObjectToBool}, {sd:AInvertBool}}, FallbackValue=false}" />
									 
									  <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Background="{StaticResource NormalBrush}"
											HorizontalAlignment="Right" VerticalAlignment="Top"  Margin="0,3,0,0">
										  <Button Command="{Binding Sources.UpdateFromSourceCommand}" Margin="0">
											  <Image Source="{Binding Source={StaticResource UpdateSelectedAssetsFromSource}, Path=Source}" Width="12" Height="12" Margin="5"/>
										  </Button>
									  </Border>
									  <Button HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,3" Command="{Binding Dependencies.ToggleIsRootOnSelectedAssetCommand, FallbackValue={x:Null}}">
										  <!--<Button.Resources>-->
										  <!--<ControlTheme TargetType="{x:Type Button}">
												  <Setter Property="Template">
													  <Setter.Value>
														  <ControlTemplate x:Key="{x:Type Button}" TargetType="{x:Type Button}">
															  <ContentPresenter Content="{Binding Content}"/>
														  </ControlTemplate>
													  </Setter.Value>
												  </Setter>
											  </ControlTheme>-->
										  <!--</Button.Resources>-->
										  <Grid Background="Transparent">
											  <Image Source="{StaticResource ImageAssetIsRoot}" Width="12" Height="12" Margin ="5" IsVisible="{Binding Dependencies.IsRoot, FallbackValue=false}"/>
											  <Image Source="{StaticResource ImageAssetIsIndirectlyIncluded}" Width="12" Height="12" Margin ="5" IsVisible="{Binding Dependencies.IsIndirectlyIncluded, FallbackValue=false}"/>
											  <Image Source="{StaticResource ImageAssetIsExcluded}" Width="12" Height="12" Margin ="5" IsVisible="{Binding Dependencies.IsExcluded, FallbackValue=false}"/>
										  </Grid>
									  
								  </Button>
								  </Grid>
							  </HeaderedContentControl.Header>
							  <StackPanel Background="Transparent" Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}" Height="48">
								  <DockPanel HorizontalAlignment="Center" LastChildFill="False">
									  <TextBlock DockPanel.Dock="Right" Text="{Binding IsDirty, Converter={sd:ABoolToParam}, ConverterParameter=*}" HorizontalAlignment="Center"
												 VerticalAlignment="Bottom" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
									  <TextBlock Text="{Binding Name, Converter={cvt:ANameBreakingLine}}" TextAlignment="Center" TextTrimming="CharacterEllipsis" TextWrapping="Wrap" MaxHeight="32"/>


								  </DockPanel>
								  <TextBlock Text="{Binding TypeDisplayName}" HorizontalAlignment="Center" TextAlignment="Center" TextTrimming="CharacterEllipsis" FontSize="10" Opacity="0.5" />
							  </StackPanel>
							  <ToolTip.Tip>
								  <ContentControl Content="{Binding}">
									  <ContentControl.DataTemplates>
										  <!-- asset -->
										  <DataTemplate DataType="viewModel:AssetViewModel">
											  <StackPanel>
												  <TextBlock Text="{Binding Url, StringFormat={sd:Localize URL: {0}}}" FontWeight="Bold"/>
												  <TextBlock Text="{Binding TypeDisplayName, StringFormat={sd:Localize Type: {0}}}"/>
												  <TextBlock Text="{Binding Tags, Converter={sd:AJoinStrings}, StringFormat={sd:Localize Tags: {0}}}"  IsVisible="{Binding Tags, Converter={sd:AChained {sd:ACountEnumerable}, {sd:ANumericToBool}}, FallbackValue=false}"/>
												  <StackPanel Orientation="Horizontal" IsVisible="{Binding Dependencies.IsRoot, FallbackValue=false}">
													  <Image Source="{StaticResource ImageAssetIsRoot}" Width="16" Height="16" Margin="0,2,0,0"/>
													  <TextBlock Text="{sd:Localize Included in build as root}"/>
												  </StackPanel>
												  <StackPanel Orientation="Horizontal" IsVisible="{Binding Dependencies.IsIndirectlyIncluded, FallbackValue=false}">
													  <Image Source="{StaticResource ImageAssetIsIndirectlyIncluded}" Width="16" Height="16" Margin="0,2,0,0"/>
													  <TextBlock Text="{sd:Localize Included in build as dependency}"/>
												  </StackPanel>
												  <StackPanel Orientation="Horizontal" IsVisible="{Binding Dependencies.IsExcluded, FallbackValue=false}">
													  <Image Source="{StaticResource ImageAssetIsExcluded}" Width="16" Height="16" Margin="0,2,0,0"/>
													  <TextBlock Text="{sd:Localize Excluded from build}"/>
												  </StackPanel>
											  </StackPanel>
										  </DataTemplate>
										  <!-- folder -->
										  <DataTemplate DataType="viewModel:DirectoryViewModel">
											  <StackPanel>
												  <TextBlock Text="{Binding Path, StringFormat={sd:Localize URL: {0}}}" FontWeight="Bold"/>
												  <TextBlock Text="{Binding TypeDisplayName, StringFormat={sd:Localize Type: {0}}}"/>
												  <TextBlock Text="Directory"/>
											  </StackPanel>
										  </DataTemplate>
										  <!-- default template (fallthrough) -->
										  <DataTemplate DataType="viewModel:SessionObjectViewModel">
											  <StackPanel>
												  <TextBlock Text="{Binding Name, StringFormat={sd:Localize Name: {0}}}" FontWeight="Bold"/>
												  <TextBlock Text="{Binding TypeDisplayName, StringFormat={sd:Localize Type: {0}}}"/>
												  <TextBlock Text="{Binding Content}"/>
											  </StackPanel>
										  </DataTemplate>
									  </ContentControl.DataTemplates>
								  </ContentControl>

							  
							  </ToolTip.Tip>
						  </HeaderedContentControl>
					  </DataTemplate>

					  <DataTemplate  x:Key="EditItemTemplate" DataType="{x:Type viewModel:ISessionObjectViewModel}">
						  <HeaderedContentControl>
							  <HeaderedContentControl.Header>
								  <Grid>
									  <Border BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="2" CornerRadius="3" Margin="0,3,0,0">
										  <Image Source="{Binding ThumbnailData.Presenter, Mode=OneWay}" 
												 Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
												 Height="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"/>
									  </Border>
									  <ProgressBar Width="32" Height="8" IsIndeterminate="{Binding ThumbnailData, Mode=OneWay}"
												  />
								  </Grid>
							  </HeaderedContentControl.Header>
							  <sd:TextBox Text="{Binding Name}" Width="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
											Margin="0,5,0,0" GetFocusOnLoad="True" SelectAllOnFocus="True"/>
						  </HeaderedContentControl>
					  </DataTemplate>
				  <!--</DataTemplate.Resources>-->

			  <DataTemplate x:Key="AssetTileView">

				  <!--Just testing <ItemsControl ItemsSource="{Binding FilteredContent}"></ItemsControl>-->

				  <controls:AEditableContentListBox ItemsSource="{Binding FilteredContent}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
												    
												   CanEdit="{Binding CanEditAssets, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
											   ItemTemplate="{StaticResource ItemTemplate}"
													EditItemTemplate="{StaticResource EditItemTemplate}">
					  <!--<controls:AEditableContentListBox ItemsSource="{Binding FilteredContent}" SelectionMode="Extended" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
													   VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" TextSearch.TextPath="Name"
													   CanEdit="{Binding CanEditAssets, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}}"
													   ItemTemplate="{StaticResource ItemTemplate}" EditItemTemplate="{StaticResource EditItemTemplate}">-->
						  <controls:AEditableContentListBox.ItemsPanel>
						  <ItemsPanelTemplate>
							  <sd:AVirtualizingTilePanel MaximumItemSpacing="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}, Converter={sd:AMultiply}, ConverterParameter=0.375}" MinimumItemSpacing="4"
														  ItemSlotSize="{Binding TileThumbnailSize, RelativeSource={RelativeSource AncestorType=view:AAssetViewUserControl}, Converter={sd:AChained {sd:ANumericToSize}, {sd:ASumSize}, Parameter1={sd:ASize 1,1}, Parameter2={sd:ASize 18,64}}}">
								 <!--<i:Interaction.Behaviors>
									  <sd:TilePanelNavigationBehavior/>
								  </i:Interaction.Behaviors>-->
							  </sd:AVirtualizingTilePanel>
						  </ItemsPanelTemplate>
					  </controls:AEditableContentListBox.ItemsPanel>
					  <controls:AEditableContentListBox.ItemContainerTheme>
						  <ControlTheme TargetType="{x:Type controls:AEditableContentListBoxItem}" BasedOn="{StaticResource {x:Type controls:AEditableContentListBoxItem}}" d:DataContext="{d:DesignInstance viewModel:AssetViewModel}">
							  <Setter Property="CanEdit" Value="{Binding IsLocked, Converter={sd:AInvertBool}}"/>
							  <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
							  <!--<Setter Property="sd:Interaction.Behaviors">
								  <Setter.Value>
									  <sd:BehaviorCollection>
										  <sd:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="sd:ATextBox" Property="controls:AEditableContentListBoxItem.IsEditing" Value="False"/>
										  <sd:OnEventSetPropertyBehavior EventName="Cancelled" EventOwnerType="sd:ATextBox" Property="controls:AEditableContentListBoxItem.IsEditing" Value="False"/>
									  </sd:BehaviorCollection>
								  </Setter.Value>
							  </Setter>-->
						  </ControlTheme>
					  </controls:AEditableContentListBox.ItemContainerTheme>
					  <i:Interaction.Behaviors>
						  <sd:AListBoxBindableSelectedItemsBehavior SelectedItems="{Binding SelectedContent}" GiveFocusOnSelectionChange="{Binding GiveFocusOnSelectionChange, ElementName=AssetView}"/>
						  <!--<behaviors:ListBoxDragDropBehavior DragVisualTemplate="{StaticResource DragVisualTemplate}"/>-->
						  <!--<behaviors:TilePanelThumbnailPrioritizationBehavior/>-->
						  <!--<behaviors:BringSelectionToViewBehavior/>-->
						  <!--<sd:CommandBindingBehavior RoutedCommand="ApplicationCommands.Delete" Command="{Binding DeleteContentCommand}" IsEnabled="{Binding CanDeleteAssets, ElementName=AssetView}"/>-->
					  </i:Interaction.Behaviors>
				  </controls:AEditableContentListBox>
			  </DataTemplate>
			  <!--<CollectionViewSource x:Key="FilteredContentView" Source="{Binding FilteredAssets}" />-->
			  <ItemsControl x:Key="FilteredContentView" ItemsSource="{Binding FilteredAssets}" />
		  </ResourceDictionary>
	  </DockPanel.Resources>


	 

		  <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			  <!--<ToolBarTray DockPanel.Dock="Top">-->
			  
			  <!--<FrameworkElement.Resources>
        <Style TargetType="{x:Type Image}">
          <Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
        </Style>
      </FrameworkElement.Resources>-->

			  <ItemsControl IsVisible="{Binding PrimaryToolBarItems.Count, ElementName=AssetView, Converter={sd:ANumericToBool}}" ItemsSource="{Binding PrimaryToolBarItems, ElementName=AssetView}" >
			  <ItemsControl.ItemsPanel>
				  <ItemsPanelTemplate>
					  <StackPanel Orientation="Horizontal">
					  </StackPanel>
				  </ItemsPanelTemplate>
			  </ItemsControl.ItemsPanel>
			  </ItemsControl>
			  
			  <!--  SECONDARY TOOLBAR  -->
			  <ItemsControl>
				  <ItemsControl.ItemsPanel>
					  <ItemsPanelTemplate>
						  <StackPanel Orientation="Horizontal">
						  </StackPanel>
					  </ItemsPanelTemplate>
				  </ItemsControl.ItemsPanel>				 
				  <!--  NEW ASSET  -->
				  <ToggleButton x:Name="Toggle" 
								ToolTip.Tip="{sd:Localize Add an asset to this location, Context=ToolTip}" >
					  <StackPanel Orientation="Horizontal">
						  <Image Source="{Binding Source={StaticResource ImageNewAsset}, Path=Source}"  Stretch="None"></Image>
						  <TextBlock Text="{sd:Localize Add asset}" Margin="2,2,4,2" VerticalAlignment="Center"/>
					  </StackPanel>
					  <i:Interaction.Behaviors>
						  <!--<sd:ToggleButtonPopupBehavior/>-->
					  </i:Interaction.Behaviors>
				  </ToggleButton>
				  <Popup IsOpen="{Binding IsChecked, ElementName=Toggle, Mode=TwoWay}" >
					  <Border MinHeight="300" Margin="6" Background="{StaticResource ControlBackgroundBrush}"
							  BorderBrush="{StaticResource NormalBrush}" BorderThickness="1">
						  <Border.Effect>
							  <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
						  </Border.Effect>
						  <!--<templateViews:AddItemUserControl TemplateCollection="{Binding AddAssetTemplateCollection}" AddItemCommand="{Binding RunAssetTemplateCommand}"
															SelectFilesToCreateItemCommand="{Binding SelectFilesToCreateAssetCommand}"/>-->
					  </Border>
					  <i:Interaction.Behaviors>
						  <!--<sd:OnEventSetPropertyBehavior EventName="Validated" EventOwnerType="sd:FilteringComboBox" Property="{x:Static Popup.IsOpenProperty}" Value="{sd:False}"/>-->
					  </i:Interaction.Behaviors>
				  </Popup>
				  <!--  UPDATE ASSETS FROM SOURCE BUTTON  -->
				  <Button Command="{Binding Session.SourceTracker.UpdateAllAssetsWithModifiedSourceCommand}"
						  ToolTip.Tip="{sd:AToolTip {sd:ALocalize Update assets whose source files have changed, Context=AToolTip}, {x:Static strings:KeyGestures.UpdateAllAssetsWithModifiedSource}}"
						  IsVisible="{Binding CanEditAssets, ElementName=AssetView}" >
					  <DockPanel>
						  <TextBlock DockPanel.Dock="Right" Margin="3,0" 
									 Text="{Binding Session.SourceTracker.AssetsToUpdate.Count, StringFormat=({0})}" VerticalAlignment="Center" />
						  <Grid>
							  <Image Source="{Binding Source={StaticResource UpdateAllAssetsWithModifiedSource}, Path=Source}" Stretch="None"/>
							  <Rectangle Fill="{StaticResource NormalBrush}" >
								  <Rectangle.OpacityMask>
									  <ImageBrush Source="{Binding Source={StaticResource UpdateAllAssetsWithModifiedSource}, Path=Source}"/>
								  </Rectangle.OpacityMask>
								  <!--<Rectangle.Triggers>
									  <EventTrigger RoutedEvent="Window.Loaded">
										  <BeginStoryboard>
											  <Storyboard RepeatBehavior="Forever">
												  <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:0" AutoReverse="True"/>
											  </Storyboard>
										  </BeginStoryboard>
									  </EventTrigger>
								  </Rectangle.Triggers>-->
							  </Rectangle>
						  </Grid>
					  </DockPanel>
				  </Button>
				  <Button Command="{Binding Session.ImportEffectLogCommand}"
						 IsEnabled="{Binding Session.ImportEffectLogPendingCount, Converter={sd:ANumericToBool}}"
							IsVisible="{Binding CanEditAssets, ElementName=AssetView}"
						  ToolTip.Tip="{sd:Localize Import last effects compiled remotely, Context=ToolTip}" >
					  <!--<Button Command="{Binding Session.ImportEffectLogCommand}"
							  IsEnabled="{Binding Session.ImportEffectLogPendingCount, Converter={sd:NumericToBool}}"
						  
							  ToolTip.Tip="{sd:Localize Import last effects compiled remotely, Context=ToolTip}" >-->
						  <DockPanel>
						  <TextBlock DockPanel.Dock="Right" Margin="3,0" 
									 Text="{Binding Session.ImportEffectLogPendingCount, StringFormat=({0})}" VerticalAlignment="Center" />
						  <Grid>
							  <Image Source="{Binding Source={StaticResource ImageReimportEffects}, Path=Source}"  Stretch="None"/>
							  <Rectangle Fill="{StaticResource NormalBrush}" >
								  <Rectangle.OpacityMask>
									  <ImageBrush Source="{Binding Source={StaticResource ImageReimportEffects}, Path=Source}"/>
								  </Rectangle.OpacityMask>
								  <!--<Rectangle.Triggers>
									  <EventTrigger RoutedEvent="Window.Loaded">
										  <BeginStoryboard>
											  <Storyboard RepeatBehavior="Forever">
												  <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5" BeginTime="0:0:0" AutoReverse="True"/>
											  </Storyboard>
										  </BeginStoryboard>
									  </EventTrigger>
								  </Rectangle.Triggers>-->
							  </Rectangle>
						  </Grid>
					  </DockPanel>
				  </Button>
				  <Separator/>
				  <!--  EDIT  -->
				  <Button Command="{Binding Session.EditSelectedContentCommand}"
						  ToolTip.Tip="{sd:AToolTip {sd:ALocalize Open asset in dedicated editor, Context=AToolTip}, {x:Static strings:KeyGestures.EditAsset}}"  >
					  <Image Source="{Binding Source={StaticResource ImageEditAsset}, Path=Source}" Stretch="None"/>
				  </Button>
				  <Separator IsVisible="{Binding CanEditAssets, ElementName=AssetView}" />
				  <!-- VIEW OPTIONS -->
				  <Menu Background="Transparent">
					  <MenuItem StaysOpenOnClick="True" Theme="{StaticResource ToolBarIconMenuItemStyle}">
						  <MenuItem.Icon>
							  <Image Source="{StaticResource ImageView}" MaxHeight="16" MaxWidth="16"
									 ToolTip.Tip="{sd:Localize Asset view options, Context=ToolTip}" />
						  </MenuItem.Icon>
						  <!--<MenuItem.Resources>
							  <ControlTheme TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" />
						  </MenuItem.Resources>-->
						  <MenuItem Header="{sd:ALocalize Display, Context=Menu}" Theme="{StaticResource MenuGroupWithItemsStyle}" IsVisible="{Binding CanRecursivelyDisplayAssets, ElementName=AssetView}">
							  <MenuItem Header="{sd:Localize Assets in selected folder only, Context=Menu}"
										Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderOnly}"
										 />
							  <MenuItem Header="{sd:Localize Assets and folders in selected folder, Context=Menu}" 
										Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetAndFolderInSelectedFolder}"
										 />
							  <MenuItem Header="{sd:Localize Assets in selected folder and subfolders, Context=Menu}" 
										Command="{Binding ChangeDisplayAssetModeCommand}" CommandParameter="{x:Static viewModel:DisplayAssetMode.AssetInSelectedFolderAndSubFolder}"
										 />
						  </MenuItem>
						  <MenuItem Header="Sort by"  />
						  <MenuItem Header="{sd:Localize Name, Context=Menu}" 
									Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.Name}"
									/>
						  <MenuItem Header="{sd:Localize Date modified, Context=Menu}"
									Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.ModificationDateThenName}"
									/>
						  <MenuItem Header="{sd:Localize Type, Context=Menu}" 
									Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.TypeOrderThenName}"
									/>
						  <MenuItem Header="{sd:Localize Unsaved changes, Context=Menu}" 
									Command="{Binding SortAssetsCommand}" CommandParameter="{x:Static viewModel:SortRule.DirtyThenName}"
									/>
						  <MenuItem >
							  <MenuItem.Header>
								  <DockPanel LastChildFill="False">
									  <TextBlock DockPanel.Dock="Left" Text="View" FontWeight="Bold" />
									  <Button DockPanel.Dock="Right" Margin="4 0 0 0" Background="Transparent"
											  Command="{Binding ZoomInCommand}"
											  ToolTip.Tip="{sd:Localize Zoom in, Context=ToolTip}" >
										  <Image Source="{StaticResource ImageZoomIn}" Stretch="None"/>
									  </Button>
									  <Button DockPanel.Dock="Right" Background="Transparent"
											  Command="{Binding ZoomOutCommand}"
											  ToolTip.Tip="{sd:Localize Zoom out, Context=ToolTip}" >
										  <Image Source="{StaticResource ImageZoomOut}" Stretch="None"/>
									  </Button>
								  </DockPanel>
							  </MenuItem.Header>
							  <MenuItem Header="{sd:Localize Tiles, Context=Menu}" CommandParameter="{StaticResource AssetTileView}">
								  <!--<MenuItem.Command>
									  <view:SetContentTemplateCommand Target="{x:Reference AssetViewPresenter}"/>
								  </MenuItem.Command>-->
								  <MenuItem.Icon>
									  <Image Grid.Column="0" Source="{StaticResource ImageShowTiles}"/>
								  </MenuItem.Icon>
							  </MenuItem>
						  </MenuItem>
					  </MenuItem>
				  </Menu>
				  <Separator/>
			  </ItemsControl>
			  <!--  FILTER  -->
			  
        <sd:ASearchComboBox Width="120" WatermarkContent="{sd:Localize Add a filter...}"
                             ItemsSource="{Binding AvailableAssetFilters}" SearchText="{Binding AssetFilterPattern}" ClearTextAfterSelection="True"
                             Command="{Binding AddAssetFilterCommand}" AlternativeCommand="{Binding RefreshAssetFilterCommand}" AlternativeModifiers="Shift"
                             Grid.IsSharedSizeScope="True" x:Name="FilterSearchComboBox" 
                             ToolTip.Tip="{sd:Localize Filter assets by name\, type or tag}" >
          <sd:ASearchComboBox.ItemTemplate>
            <DataTemplate>
              <Grid>
                <Grid.ColumnDefinitions>
					<!--<ColumnDefinition x:Name="IconColumn"  MinWidth="17" Width="Auto" SharedSizeGroup="IconColumnGroup" />-->
					<ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="IconColumnGroup" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="ContentColumnGroup" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Height="16" Width="16"  >
                  <!--<Image.Resources>-->
                  <!--</Image.Resources>-->
                </Image>
                <TextBlock Margin="4,0" Grid.Column="1" Text="{Binding Converter={cvt:AssetFilterViewModelToFullDisplayName}}" VerticalAlignment="Center" />
              </Grid>
            </DataTemplate>
          </sd:ASearchComboBox.ItemTemplate>
        </sd:ASearchComboBox>
        <Button Command="{Binding ClearAssetFiltersCommand}" IsVisible="{Binding CurrentAssetFilters.Count, Converter={sd:ANumericToBool}}"
                ToolTip.Tip="{sd:Localize Clear filters, Context=ToolTip}" >
          <Image Source="{StaticResource ImageClearFilters}"  Stretch="None"/>
        </Button>
			  <!--</ToolBar> -->
			  <!--  FILTER TAGS  -->
			  
			  <ItemsControl ItemsSource="{Binding CurrentAssetFilters}" Theme="{StaticResource TagToolBarStyle}" HorizontalAlignment="Stretch">
				  <ItemsControl.ItemsPanel>
					  <ItemsPanelTemplate>
						  <StackPanel Orientation="Horizontal">
						  </StackPanel>
					  </ItemsPanelTemplate>
				  </ItemsControl.ItemsPanel>
				  <!--<ToolBar ItemsSource="{Binding CurrentAssetFilters}" Style="{StaticResource TagToolBarStyle}" HorizontalAlignment="Stretch"> -->
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <!--<sd:TagControl Height="20" Margin="2" ToolTip="{Binding Converter={cvt:AssetFilterViewModelToFullDisplayName}}"
                             VerticalAlignment="Center" CloseTagCommand="{Binding RemoveFilterCommand}">
              <sd:TagControl.Style>
                <Style TargetType="{x:Type sd:TagControl}" BasedOn="{StaticResource {x:Type sd:TagControl}}">
                  <Style.Triggers>
                    
			  --><!--  Background Color  --><!--
			  
                    <DataTrigger Binding="{Binding Category}" Value="{x:Static viewModel:FilterCategory.AssetType}">
                      <Setter Property="Background" Value="#D7AA67" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Category}" Value="{x:Static viewModel:FilterCategory.AssetName}">
                      <Setter Property="Background" Value="#84CE80" />
                    </DataTrigger>
                    
			  --><!--  Opacity  --><!--
			  
                    <DataTrigger Binding="{Binding IsActive}" Value="False">
                      <Setter Property="Opacity" Value="0.5" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </sd:TagControl.Style>-->
              <Button Command="{Binding ToggleIsActiveCommand}" VerticalAlignment="Center">
                <Button.Template>
                  <ControlTemplate>
                    <TextBlock Margin="2,1,2,0" Text="{Binding DisplayName}" TextTrimming="CharacterEllipsis" MaxWidth="100" VerticalAlignment="Center" />
                  </ControlTemplate>
                </Button.Template>
              </Button>
            <!--</sd:TagControl>-->
          </DataTemplate>
        </ItemsControl.ItemTemplate>
		</ItemsControl>
      <!--</ToolBar>-->

		  </StackPanel>
			  <!--</ToolBarTray>-->
			  
			  
    <Grid ContextMenu="{Binding AssetContextMenu, ElementName=AssetView}" Background="Transparent">
		<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False"
					IsVisible="{Binding FilteredContent.Count, Converter={sd:AChained {sd:ANumericToBool}, {sd:AInvertBool}}}">
			<!--<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" IsHitTestVisible="False"
						Visibility="{Binding FilteredContent.Count, Converter={sd:Chained {sd:NumericToBool}, {sd:InvertBool}, {sd:VisibleOrCollapsed}}}">-->
				<TextBlock Text="{sd:ALocalize No asset to display in this folder or no folder selected. Check your active filters.}"
                   HorizontalAlignment="Center" IsHitTestVisible="False"
                   />
        <TextBlock Text="{sd:ALocalize You can also drop files here to import assets.}" HorizontalAlignment="Center" IsHitTestVisible="False"
                   />
      </StackPanel>
      <ContentPresenter x:Name="AssetViewPresenter" Content="{Binding}" ContentTemplate="{StaticResource AssetTileView}"
                        IsVisible="{Binding FilteredContent.Count, Converter={sd:ANumericToBool}}">
      </ContentPresenter>
      <i:Interaction.Behaviors>
        <!--<behaviors:FrameworkElementDragDropBehavior CanDrag="False" UsePreviewEvents="True" CanDrop="{Binding CanAddAssets, ElementName=AssetView}"
                                                    DisplayDropAdorner="{x:Static behaviors:DisplayDropAdorner.ExternalOnly}"/>-->
      </i:Interaction.Behaviors>
    </Grid>

	 
  </DockPanel>

	
</UserControl>
